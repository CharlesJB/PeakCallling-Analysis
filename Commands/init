#!/bin/bash
VERSION=0.1

Usage(){
	echo "Usage:"
	echo "	PeakCalling-Tool init [peak-caller] [peak-caller_options]"
	echo ""
	echo "Available peak callers:"
	echo "	macs2 (default)"
	echo "	macs14"
	echo "	pics"
	echo ""
	echo "Available commands:"
	echo "	help"
	echo "	version"
	echo ""
	echo "See README.md for more infos on each peak caller."
	echo ""
}

ValidatePeakCaller(){
	peak_caller=$1
	if [ "$peak_caller" != "macs2" ] \
	&& [ "$peak_caller" != "macs14" ] \
	&& [ "$peak_caller" != "pics" ]
	then
		echo ""
		echo "Invalid peak caller: $peak_caller"
		echo ""
		Usage
		exit
	fi
}

if [ "$#" -lt 1 ] || [ "$1" == "help" ]
then
	Usage
	exit
elif [ "$1" == "version" ]
then
	echo "Version: $VERSION"
fi

dir_scripts=$1
source $dir_scripts/Utility/utils.sh

peak_caller=$2
if [ "$peak_caller" == "" ]
then
	peak_caller=macs2
fi
ValidatePeakCaller $peak_caller

options=""
for i in $(seq 3 $#)
do
	toEval="options+=\" \"\$$i"
	eval $toEval
done
#echo options:$options

# A config file will is needed to tell the init script which files should be analyzed
# and which control file should be used with wach treatment file.
config_file=config.txt

# Reset main directory's Makefile
rm -f Makefile

# Parse configuration file
while read line
do
	column_count=$(echo $line | awk '{ print NF }')

	# Parse the treatment column
	treatment=$(echo -e $line | awk '{ print $1 }')
	check_file $treatment
	base_treatment=$(basename ${treatment%.*})
	dir_treatment=$base_treatment/treatment
	mkdir -p $dir_treatment
	raw_data_dir=$(dirname $treatment)

	sed_script=$(echo $dir_scripts| sed 's/\//\\\//g')
	sed_raw_data_dir=$(echo $raw_data_dir | sed 's/\//\\\//g')

	if [ "$column_count" -eq 1 ] # Treatment only
	then
		# Create sub-directory's Makefile
		toEval="cat $dir_scripts/Templates/Makefile_SubDirectoriesNoCTRL_Template "
		toEval+="| sed \"s/__SCRIPTS_DIR__/$sed_script/g\" "
		toEval+="| sed \"s/__TREATMENT_BASE__/$base_treatment/g\" "
		toEval+="| sed \"s/__RAW_DATA_DIR__/$sed_raw_data_dir/g\" "
		toEval+="| sed \"s/__PEAK_CALLER__/$peak_caller/g\" "
		toEval+="| sed \"s/__PEAK_CALLER_OPTIONS__/$options/g\" "
		toEval+="> $base_treatment/Makefile"
		eval $toEval

	else # Treatment and control
		# Parse the control column
		control=$(echo $line | awk '{ print $2 }')
		check_file $control
		base_control=$(basename ${control%.*})
		dir_control=$base_treatment/control
		mkdir -p $dir_control

		# Create sub-directory's Makefile
		toEval="cat $dir_scripts/Templates/Makefile_SubDirectoriesCTRL_Template "
		toEval+="| sed \"s/__SCRIPTS_DIR__/$sed_script/g\" "
		toEval+="| sed \"s/__TREATMENT_BASE__/$base_treatment/g\" "
		toEval+="| sed \"s/__RAW_DATA_DIR__/$sed_raw_data_dir/g\" "
		toEval+="| sed \"s/__PEAK_CALLER__/$peak_caller/g\" "
		toEval+="| sed \"s/__CONTROL_BASE__/$base_control/g\" "
		toEval+="| sed \"s/__PEAK_CALLER_OPTIONS__/$options/g\" "
		toEval+="> $base_treatment/Makefile"
		eval $toEval
	fi

	# Add current file to main directory's Makefile
	echo SUBDIRS+=$base_treatment  >> Makefile
	echo BASE_BED+=$base_treatment"_peaks.bed" >> Makefile

done < $config_file

# Complete the main makefile
echo "" >> Makefile
cat $dir_scripts/Templates/Makefile_MainDirectory_Template >> Makefile
